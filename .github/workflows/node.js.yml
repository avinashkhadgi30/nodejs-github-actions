# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.16.0]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm install
    - run: npm run build --if-present


  depchecktest:
    runs-on: ubuntu-latest
    needs: build
    name: depecheck_test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'test'
          path: '.'
          format: 'HTML'
          out: 'reports' # this is the default, no need to specify unless you wish to override it
          args: >
            #--failOnCVSS 9
            --enableRetired
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
           name: Dependency check report
           path: ${{github.workspace}}/reports

  test-stage:
    runs-on: ubuntu-latest
    needs: ['build', 'depchecktest']
    steps:
      - name: Running Tests
        uses: actions/checkout@v3
      - run: echo "runnigngngngngn"

  build-and-push-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Build Docker image
      - name: Build Docker image
        run: docker build -t avinashkhadgi/nodejs-app:latest .

      # Login to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push Docker image to DockerHub
      - name: Push Docker image to DockerHub
        run: docker push avinashkhadgi/nodejs-app:latest

  Docker-image-scan:
    runs-on: ubuntu-latest
    needs: ['build', 'depchecktest', 'build-and-push-docker-image', 'test-stage']
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/avinashkhadgi/nodejs-app'
          format: 'json'
          output: 'trivy-results.json'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
           name: Trvy scan report
           path: ${{github.workspace}}/reports
